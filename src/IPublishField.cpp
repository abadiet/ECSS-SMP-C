/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#include "Smp-C/Publication/IPublishField.h"
#include <Smp/Publication/IPublishField.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Publication ### */
#define CW_SPACE CW_root_Smp_Publication

#undef CW_SPACE


/* ### Smp::Publication::IPublishField ### */
#define CW_SPACE CW_root_Smp_Publication_IPublishField

void
CW(_IPublishField)
(
    CW() * self
) {
    static_cast<Smp::Publication::IPublishField *>(self)->~IPublishField(
    );
}

CW(CW_root_Smp, IField) *
CW(PublishFieldBool)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Bool) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Bool *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldChar8)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Char8) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Char8 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldInt8)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Int8) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Int8 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldInt16)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Int16) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Int16 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldInt32)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Int32) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Int32 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldInt64)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Int64) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Int64 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldUInt8)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, UInt8) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::UInt8 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldUInt16)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, UInt16) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::UInt16 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldUInt32)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, UInt32) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::UInt32 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldUInt64)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, UInt64) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::UInt64 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldFloat32)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Float32) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Float32 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldFloat64)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Float64) * address,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Float64 *>(address),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp, IField) *
CW(PublishFieldVoid)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Void) * address,
    CW(CW_root_Smp, Uuid) * typeUuid,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Void *>(address),
        *static_cast<Smp::Uuid*>(typeUuid),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

void
CW(PublishField)
(
    CW() * self,
    CW(CW_root_Smp, IField) * field
) {
    static_cast<Smp::Publication::IPublishField *>(self)->PublishField(
        static_cast<Smp::IField *>(field)
    );
}

CW(CW_root_Smp_Publication, IPublishField) *
CW(PublishArrayShort)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state
) {
    return static_cast<CW(CW_root_Smp_Publication, IPublishField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishArray(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state)
    ));
}

CW(CW_root_Smp, ISimpleArrayField) *
CW(PublishArray)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Int64) count,
    CW(CW_root_Smp, Void) * address,
    CW(CW_root_Smp, PrimitiveTypeKind) type,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state,
    CW(CW_root_Smp, Bool) input,
    CW(CW_root_Smp, Bool) output
) {
    return static_cast<CW(CW_root_Smp, ISimpleArrayField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishArray(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Int64>(count),
        static_cast<Smp::Void *>(address),
        static_cast<Smp::PrimitiveTypeKind>(type),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state),
        static_cast<Smp::Bool>(input),
        static_cast<Smp::Bool>(output)
    ));
}

CW(CW_root_Smp_Publication, IPublishField) *
CW(PublishStructure)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, ViewKind) view,
    CW(CW_root_Smp, Bool) state
) {
    return static_cast<CW(CW_root_Smp_Publication, IPublishField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->PublishStructure(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::ViewKind>(view),
        static_cast<Smp::Bool>(state)
    ));
}

CW(CW_root_Smp, IField) *
CW(GetField)
(
    CW() * self,
    CW(CW_root_Smp, String8) fullName
) {
    return static_cast<CW(CW_root_Smp, IField) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->GetField(
        static_cast<Smp::String8>(fullName)
    ));
}

const CW(CW_root_Smp, FieldCollection) *
CW(GetFields)
(
    CW() * self
) {
    return static_cast<const CW(CW_root_Smp, FieldCollection) *>(
    static_cast<Smp::Publication::IPublishField *>(self)->GetFields(
    ));
}

/* Error while processing function "operator=" at Smp/Publication/IPublishField.h:54:15 (exported to Smp-C/Publication/IPublishField.h) : Reference type is not supported: IPublishField & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */
