/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#ifndef CWRAPPER_IPROPERTY_H
#define CWRAPPER_IPROPERTY_H

#include "./CWraPPer.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


#include "Smp-C/AccessKind.h"
#include "Smp-C/AnySimple.h"
#include "Smp-C/InvalidAccess.h"
#include "Smp-C/InvalidPropertyValue.h"
#include "Smp-C/IObject.h"
#include "Smp-C/PrimitiveTypes.h"
#include "Smp-C/ViewKind.h"


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#ifndef CW_root_Smp
#define CW_root_Smp CW_BUILD_SPACE(CW_root, Smp)
#endif /* CW_root_Smp */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Publication ### */
#ifndef CW_root_Smp_Publication
#define CW_root_Smp_Publication CW_BUILD_SPACE(CW_root_Smp, Publication)
#endif /* CW_root_Smp_Publication */
#define CW_SPACE CW_root_Smp_Publication

typedef void CW(IType);

#undef CW_SPACE


/* ### Smp ### */
#ifndef CW_root_Smp
#define CW_root_Smp CW_BUILD_SPACE(CW_root, Smp)
#endif /* CW_root_Smp */
#define CW_SPACE CW_root_Smp

typedef void CW(IProperty);

#undef CW_SPACE


/* ### Smp::IProperty ### */
#ifndef CW_root_Smp_IProperty
#define CW_root_Smp_IProperty CW_BUILD_SPACE(CW_root_Smp, IProperty)
#endif /* CW_root_Smp_IProperty */
#define CW_SPACE CW_root_Smp_IProperty

void
CW(_IProperty)
(
    CW() * self
);

const CW(CW_root_Smp_Publication, IType) *
CW(GetType)
(
    CW() * self
);

CW(CW_root_Smp, AccessKind)
CW(GetAccess)
(
    CW() * self
);

CW(CW_root_Smp, ViewKind)
CW(GetView)
(
    CW() * self
);

CW(CW_root_Smp, AnySimple)
CW(GetValue)
(
    CW() * self
);

/*
void
CW(SetValue)
(
    CW() * self,
    CW(CW_root_Smp, AnySimple) value
);
*/

CW(CW_root_Smp, PrimitiveTypeKind)
CW(GetPrimitiveTypeKind)
(
    CW() * self
);

/* Error while processing function "IProperty" at Smp/IProperty.h:46:11 (exported to Smp-C/IProperty.h) : Skipping constructor */

/* Error while processing function "operator=" at Smp/IProperty.h:46:11 (exported to Smp-C/IProperty.h) : Reference type is not supported: IProperty & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CWRAPPER_IPROPERTY_H */
