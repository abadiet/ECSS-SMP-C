/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#include "Smp-C/IProperty.h"
#include <Smp/IProperty.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Publication ### */
#define CW_SPACE CW_root_Smp_Publication

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::IProperty ### */
#define CW_SPACE CW_root_Smp_IProperty

void
CW(_IProperty)
(
    CW() * self
) {
    static_cast<Smp::IProperty *>(self)->~IProperty(
    );
}

const CW(CW_root_Smp_Publication, IType) *
CW(GetType)
(
    CW() * self
) {
    return static_cast<const CW(CW_root_Smp_Publication, IType) *>(
    static_cast<Smp::IProperty *>(self)->GetType(
    ));
}

CW(CW_root_Smp, AccessKind)
CW(GetAccess)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, AccessKind)>(
    static_cast<Smp::IProperty *>(self)->GetAccess(
    ));
}

CW(CW_root_Smp, ViewKind)
CW(GetView)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, ViewKind)>(
    static_cast<Smp::IProperty *>(self)->GetView(
    ));
}

/* Error while processing function "GetValue" at Smp/IProperty.h:69:32 (exported to Smp-C/IProperty.h) : Skipping function that returns a class/struct */

void
CW(SetValue)
(
    CW() * self,
    CW(CW_root_Smp, AnySimple) * value
) {
    static_cast<Smp::IProperty *>(self)->SetValue(
        *static_cast<Smp::AnySimple*>(value)
    );
}

CW(CW_root_Smp, PrimitiveTypeKind)
CW(GetPrimitiveTypeKind)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, PrimitiveTypeKind)>(
    static_cast<Smp::IProperty *>(self)->GetPrimitiveTypeKind(
    ));
}

/* Error while processing function "IProperty" at Smp/IProperty.h:46:11 (exported to Smp-C/IProperty.h) : Skipping constructor */

/* Error while processing function "operator=" at Smp/IProperty.h:46:11 (exported to Smp-C/IProperty.h) : Reference type is not supported: IProperty & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */
