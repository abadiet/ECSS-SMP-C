/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#include "Smp-C/Services/ITimeKeeper.h"
#include <Smp/Services/ITimeKeeper.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Services ### */
#define CW_SPACE CW_root_Smp_Services

#undef CW_SPACE


/* ### Smp::Services::ITimeKeeper ### */
#define CW_SPACE CW_root_Smp_Services_ITimeKeeper

void
CW(_ITimeKeeper)
(
    CW() * self
) {
    static_cast<Smp::Services::ITimeKeeper *>(self)->~ITimeKeeper(
    );
}

CW(CW_root_Smp, Duration)
CW(GetSimulationTime)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, Duration)>(
    static_cast<Smp::Services::ITimeKeeper *>(self)->GetSimulationTime(
    ));
}

CW(CW_root_Smp, DateTime)
CW(GetEpochTime)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, DateTime)>(
    static_cast<Smp::Services::ITimeKeeper *>(self)->GetEpochTime(
    ));
}

CW(CW_root_Smp, DateTime)
CW(GetMissionStartTime)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, DateTime)>(
    static_cast<Smp::Services::ITimeKeeper *>(self)->GetMissionStartTime(
    ));
}

CW(CW_root_Smp, Duration)
CW(GetMissionTime)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, Duration)>(
    static_cast<Smp::Services::ITimeKeeper *>(self)->GetMissionTime(
    ));
}

CW(CW_root_Smp, DateTime)
CW(GetZuluTime)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, DateTime)>(
    static_cast<Smp::Services::ITimeKeeper *>(self)->GetZuluTime(
    ));
}

void
CW(SetSimulationTime)
(
    CW() * self,
    CW(CW_root_Smp, Duration) simulationTime
) {
    static_cast<Smp::Services::ITimeKeeper *>(self)->SetSimulationTime(
        static_cast<Smp::Duration>(simulationTime)
    );
}

void
CW(SetEpochTime)
(
    CW() * self,
    CW(CW_root_Smp, DateTime) epochTime
) {
    static_cast<Smp::Services::ITimeKeeper *>(self)->SetEpochTime(
        static_cast<Smp::DateTime>(epochTime)
    );
}

void
CW(SetMissionStartTime)
(
    CW() * self,
    CW(CW_root_Smp, DateTime) missionStart
) {
    static_cast<Smp::Services::ITimeKeeper *>(self)->SetMissionStartTime(
        static_cast<Smp::DateTime>(missionStart)
    );
}

void
CW(SetMissionTime)
(
    CW() * self,
    CW(CW_root_Smp, Duration) missionTime
) {
    static_cast<Smp::Services::ITimeKeeper *>(self)->SetMissionTime(
        static_cast<Smp::Duration>(missionTime)
    );
}

/* Error while processing function "ITimeKeeper" at Smp/./Services/ITimeKeeper.h:34:15 (exported to Smp-C/Services/ITimeKeeper.h) : Skipping constructor */

/* Error while processing function "operator=" at Smp/./Services/ITimeKeeper.h:34:15 (exported to Smp-C/Services/ITimeKeeper.h) : Reference type is not supported: ITimeKeeper & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */
