/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#include "Smp-C/Services/ILinkRegistry.h"
#include <Smp/Services/ILinkRegistry.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Services ### */
#define CW_SPACE CW_root_Smp_Services

#undef CW_SPACE


/* ### Smp::Services::ILinkRegistry ### */
#define CW_SPACE CW_root_Smp_Services_ILinkRegistry

void
CW(_ILinkRegistry)
(
    CW() * self
) {
    static_cast<Smp::Services::ILinkRegistry *>(self)->~ILinkRegistry(
    );
}

void
CW(AddLink)
(
    CW() * self,
    CW(CW_root_Smp, IComponent) * source,
    const CW(CW_root_Smp, IComponent) * target
) {
    static_cast<Smp::Services::ILinkRegistry *>(self)->AddLink(
        static_cast<Smp::IComponent *>(source),
        static_cast<const Smp::IComponent *>(target)
    );
}

CW(CW_root_Smp, UInt32)
CW(GetLinkCount)
(
    CW() * self,
    const CW(CW_root_Smp, IComponent) * source,
    const CW(CW_root_Smp, IComponent) * target
) {
    return static_cast<CW(CW_root_Smp, UInt32)>(
    static_cast<Smp::Services::ILinkRegistry *>(self)->GetLinkCount(
        static_cast<const Smp::IComponent *>(source),
        static_cast<const Smp::IComponent *>(target)
    ));
}

CW(CW_root_Smp, Bool)
CW(RemoveLink)
(
    CW() * self,
    CW(CW_root_Smp, IComponent) * source,
    const CW(CW_root_Smp, IComponent) * target
) {
    return static_cast<CW(CW_root_Smp, Bool)>(
    static_cast<Smp::Services::ILinkRegistry *>(self)->RemoveLink(
        static_cast<Smp::IComponent *>(source),
        static_cast<const Smp::IComponent *>(target)
    ));
}

const CW(CW_root_Smp, ComponentCollection) *
CW(GetLinkSources)
(
    CW() * self,
    const CW(CW_root_Smp, IComponent) * target
) {
    return static_cast<const CW(CW_root_Smp, ComponentCollection) *>(
    static_cast<Smp::Services::ILinkRegistry *>(self)->GetLinkSources(
        static_cast<const Smp::IComponent *>(target)
    ));
}

CW(CW_root_Smp, Bool)
CW(CanRemove)
(
    CW() * self,
    const CW(CW_root_Smp, IComponent) * target
) {
    return static_cast<CW(CW_root_Smp, Bool)>(
    static_cast<Smp::Services::ILinkRegistry *>(self)->CanRemove(
        static_cast<const Smp::IComponent *>(target)
    ));
}

void
CW(RemoveLinks)
(
    CW() * self,
    const CW(CW_root_Smp, IComponent) * target
) {
    static_cast<Smp::Services::ILinkRegistry *>(self)->RemoveLinks(
        static_cast<const Smp::IComponent *>(target)
    );
}

/* Error while processing function "ILinkRegistry" at Smp/./Services/ILinkRegistry.h:45:15 (exported to Smp-C/Services/ILinkRegistry.h) : Skipping constructor */

/* Error while processing function "operator=" at Smp/./Services/ILinkRegistry.h:45:15 (exported to Smp-C/Services/ILinkRegistry.h) : Reference type is not supported: ILinkRegistry & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */
