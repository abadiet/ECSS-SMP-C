/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#include "Smp-C/IEventSource.h"
#include <Smp/IEventSource.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::IEventSource ### */
#define CW_SPACE CW_root_Smp_IEventSource

void
CW(_IEventSource)
(
    CW() * self
) {
    static_cast<Smp::IEventSource *>(self)->~IEventSource(
    );
}

void
CW(Subscribe)
(
    CW() * self,
    CW(CW_root_Smp, IEventSink) * eventSink
) {
    static_cast<Smp::IEventSource *>(self)->Subscribe(
        static_cast<Smp::IEventSink *>(eventSink)
    );
}

void
CW(Unsubscribe)
(
    CW() * self,
    CW(CW_root_Smp, IEventSink) * eventSink
) {
    static_cast<Smp::IEventSource *>(self)->Unsubscribe(
        static_cast<Smp::IEventSink *>(eventSink)
    );
}

CW(CW_root_Smp, PrimitiveTypeKind)
CW(GetEventArgType)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp, PrimitiveTypeKind)>(
    static_cast<Smp::IEventSource *>(self)->GetEventArgType(
    ));
}

const CW(CW_root_Smp, EventSinkCollection) *
CW(GetEventSinks)
(
    CW() * self
) {
    return static_cast<const CW(CW_root_Smp, EventSinkCollection) *>(
    static_cast<Smp::IEventSource *>(self)->GetEventSinks(
    ));
}

/* Error while processing function "IEventSource" at Smp/IEventSource.h:44:11 (exported to Smp-C/IEventSource.h) : Skipping constructor */

/* Error while processing function "operator=" at Smp/IEventSource.h:44:11 (exported to Smp-C/IEventSource.h) : Reference type is not supported: IEventSource & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */
