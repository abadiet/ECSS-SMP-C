/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#include "Smp-C/IPublication.h"
#include <Smp/IPublication.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Publication ### */
#define CW_SPACE CW_root_Smp_Publication

#undef CW_SPACE


/* ### Smp ### */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::IPublication ### */
#define CW_SPACE CW_root_Smp_IPublication

void
CW(_IPublication)
(
    CW() * self
) {
    static_cast<Smp::IPublication *>(self)->~IPublication(
    );
}

/*
CW(CW_root_Smp_Publication, IPublishOperation) *
CW(PublishOperation)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, ViewKind) view
) {
    return static_cast<CW(CW_root_Smp_Publication, IPublishOperation) *>(
    static_cast<Smp::IPublication *>(self)->PublishOperation(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::ViewKind>(view)
    ));
}

void
CW(PublishOperation)
(
    CW() * self,
    CW(CW_root_Smp, IOperation) * operation
) {
    static_cast<Smp::IPublication *>(self)->PublishOperation(
        static_cast<Smp::IOperation *>(operation)
    );
}
*/

/*
CW(CW_root_Smp, IProperty) *
CW(PublishProperty)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid,
    CW(CW_root_Smp, AccessKind) accessKind,
    CW(CW_root_Smp, ViewKind) view
) {
    return static_cast<CW(CW_root_Smp, IProperty) *>(
    static_cast<Smp::IPublication *>(self)->PublishProperty(
        static_cast<Smp::String8>(name),
        static_cast<Smp::String8>(description),
        static_cast<Smp::Uuid>(typeUuid),
        static_cast<Smp::AccessKind>(accessKind),
        static_cast<Smp::ViewKind>(view)
    ));
}
*/

void
CW(PublishProperty)
(
    CW() * self,
    CW(CW_root_Smp, IProperty) * property
) {
    static_cast<Smp::IPublication *>(self)->PublishProperty(
        static_cast<Smp::IProperty *>(property)
    );
}

CW(CW_root_Smp, IProperty) *
CW(GetProperty)
(
    CW() * self,
    CW(CW_root_Smp, String8) name
) {
    return static_cast<CW(CW_root_Smp, IProperty) *>(
    static_cast<Smp::IPublication *>(self)->GetProperty(
        static_cast<Smp::String8>(name)
    ));
}

const CW(CW_root_Smp, PropertyCollection) *
CW(GetProperties)
(
    CW() * self
) {
    return static_cast<const CW(CW_root_Smp, PropertyCollection) *>(
    static_cast<Smp::IPublication *>(self)->GetProperties(
    ));
}

CW(CW_root_Smp, IOperation) *
CW(GetOperation)
(
    CW() * self,
    CW(CW_root_Smp, String8) name
) {
    return static_cast<CW(CW_root_Smp, IOperation) *>(
    static_cast<Smp::IPublication *>(self)->GetOperation(
        static_cast<Smp::String8>(name)
    ));
}

const CW(CW_root_Smp, OperationCollection) *
CW(GetOperations)
(
    CW() * self
) {
    return static_cast<const CW(CW_root_Smp, OperationCollection) *>(
    static_cast<Smp::IPublication *>(self)->GetOperations(
    ));
}

CW(CW_root_Smp_Publication, ITypeRegistry) *
CW(GetTypeRegistry)
(
    CW() * self
) {
    return static_cast<CW(CW_root_Smp_Publication, ITypeRegistry) *>(
    static_cast<Smp::IPublication *>(self)->GetTypeRegistry(
    ));
}

void
CW(Unpublish)
(
    CW() * self
) {
    static_cast<Smp::IPublication *>(self)->Unpublish(
    );
}

/* Error while processing function "IPublication" at Smp/./IPublication.h:55:11 (exported to Smp-C/IPublication.h) : Skipping constructor */

/* Error while processing function "operator=" at Smp/./IPublication.h:55:11 (exported to Smp-C/IPublication.h) : Reference type is not supported: IPublication & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */
