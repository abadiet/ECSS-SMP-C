/**
 * This file was auto-generated by https://github.com/abadiet/CWraPPer/
 */
#ifndef CWRAPPER_ITYPEREGISTRY_H
#define CWRAPPER_ITYPEREGISTRY_H

#include "../CWraPPer.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


#include "Smp-C/InvalidObjectName.h"
#include "Smp-C/PrimitiveTypes.h"
#include "Smp-C/Publication/InvalidArrayItemType.h"
#include "Smp-C/Publication/InvalidPrimitiveType.h"
#include "Smp-C/Publication/TypeAlreadyRegistered.h"
#include "Smp-C/Publication/TypeNotRegistered.h"
#include "Smp-C/Uuid.h"


/* ### root ### */
#define CW_SPACE CW_root

#undef CW_SPACE


/* ### Smp ### */
#ifndef CW_root_Smp
#define CW_root_Smp CW_BUILD_SPACE(CW_root, Smp)
#endif /* CW_root_Smp */
#define CW_SPACE CW_root_Smp

#undef CW_SPACE


/* ### Smp::Publication ### */
#ifndef CW_root_Smp_Publication
#define CW_root_Smp_Publication CW_BUILD_SPACE(CW_root_Smp, Publication)
#endif /* CW_root_Smp_Publication */
#define CW_SPACE CW_root_Smp_Publication

typedef void CW(IArrayType);

typedef void CW(IClassType);

typedef void CW(IEnumerationType);

typedef void CW(IStringType);

typedef void CW(IStructureType);

typedef void CW(IType);

typedef void CW(ITypeRegistry);

#undef CW_SPACE


/* ### Smp::Publication::ITypeRegistry ### */
#ifndef CW_root_Smp_Publication_ITypeRegistry
#define CW_root_Smp_Publication_ITypeRegistry CW_BUILD_SPACE(CW_root_Smp_Publication, ITypeRegistry)
#endif /* CW_root_Smp_Publication_ITypeRegistry */
#define CW_SPACE CW_root_Smp_Publication_ITypeRegistry

void
CW(_ITypeRegistry)
(
    CW() * self
);

CW(CW_root_Smp_Publication, IType) *
CW(GetType)
(
    CW() * self,
    CW(CW_root_Smp, PrimitiveTypeKind) type
);

/*
CW(CW_root_Smp_Publication, IType) *
CW(GetType)
(
    CW() * self,
    CW(CW_root_Smp, Uuid) typeUuid
);

CW(CW_root_Smp_Publication, IType) *
CW(AddFloatType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid,
    CW(CW_root_Smp, Float64) minimum,
    CW(CW_root_Smp, Float64) maximum,
    CW(CW_root_Smp, Bool) minInclusive,
    CW(CW_root_Smp, Bool) maxInclusive,
    CW(CW_root_Smp, String8) unit,
    CW(CW_root_Smp, PrimitiveTypeKind) type
);

CW(CW_root_Smp_Publication, IType) *
CW(AddIntegerType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid,
    CW(CW_root_Smp, Int64) minimum,
    CW(CW_root_Smp, Int64) maximum,
    CW(CW_root_Smp, String8) unit,
    CW(CW_root_Smp, PrimitiveTypeKind) type
);

CW(CW_root_Smp_Publication, IEnumerationType) *
CW(AddEnumerationType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid
);

CW(CW_root_Smp_Publication, IArrayType) *
CW(AddArrayType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid,
    CW(CW_root_Smp, Uuid) itemTypeUuid,
    CW(CW_root_Smp, UInt64) itemSize,
    CW(CW_root_Smp, UInt64) arrayCount,
    CW(CW_root_Smp, Bool) simpleArray
);

CW(CW_root_Smp_Publication, IStringType) *
CW(AddStringType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid,
    CW(CW_root_Smp, UInt64) length
);

CW(CW_root_Smp_Publication, IStructureType) *
CW(AddStructureType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid
);

CW(CW_root_Smp_Publication, IClassType) *
CW(AddClassType)
(
    CW() * self,
    CW(CW_root_Smp, String8) name,
    CW(CW_root_Smp, String8) description,
    CW(CW_root_Smp, Uuid) typeUuid,
    CW(CW_root_Smp, Uuid) baseClassUuid
);
*/

/* Error while processing function "operator=" at Smp/./Publication/ITypeRegistry.h:62:15 (exported to Smp-C/Publication/ITypeRegistry.h) : Reference type is not supported: ITypeRegistry & */

#undef CW_SPACE


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CWRAPPER_ITYPEREGISTRY_H */
